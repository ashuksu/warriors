# BASE - PRODUCTION
services:
  nginx:
    build:
      context: .
      dockerfile: .docker/Dockerfile
      target: nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_logs:/var/log/nginx
    depends_on:
      php:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "nginx -t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  php:
    build:
      context: .
      dockerfile: .docker/Dockerfile
      target: prod
    env_file:
      - ./.env
    environment:
      IS_DEV: "false"
    volumes:
      - php_logs:/var/log/php
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  db:
    image: postgres:16-alpine
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  nginx_logs:
  php_logs:
  db_data: