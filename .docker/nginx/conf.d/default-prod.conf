server {
    listen 80;
    server_name localhost; # TODO: Replace with your domain in production

    root /var/www/html/public;
    index index.php;

    # Production logging: only warnings and errors
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Production security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "no-referrer-when-downgrade";
    # TODO: Uncomment and configure a strict Content-Security-Policy for your application
    # add_header Content-Security-Policy "default-src 'self'; ...";

    # Serve built frontend assets from /public/dist with aggressive caching
    location /dist/ {
        # 'alias' is used because the request URI (/dist/) doesn't match the directory structure.
        alias /var/www/html/public/dist/;
        expires 1y;
        access_log off;
        # 'immutable' tells browsers this file will never change, preventing re-validation requests.
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Main routing: try static files first, then pass to PHP
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Pass PHP scripts to the PHP-FPM service
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Optimized FastCGI settings for production
        fastcgi_buffering on;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
    }

    # Deny access to Vite manifest file if it exists in production
    location = /dist/.vite/manifest.json {
        deny all;
    }

    error_page 404 /index.php;
}